services:
  ###########################################################################
  # postgres database
  ###########################################################################
  postgres:
    image: postgres:17
    hostname: postgres
    container_name: postgres
    restart: unless-stopped
    command: >
      -c ssl=on
      -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
      -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
      -c wal_level=logical
      -c max_wal_senders=1
      -c max_replication_slots=1
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -q']
      interval: 60s
      start_period: 1m
      start_interval: 10s
      timeout: 15s
      retries: 5
  ###########################################################################
  # bufstream service
  ###########################################################################
  bufstream:
    image: bufbuild/bufstream:0.3.16
    hostname: bufstream
    container_name: bufstream
    ports:
      # We'll expose bufstream on the host at port 9092.
      - "9092:9092"
    healthcheck:
      test: ["CMD", "/usr/local/bin/bufstream", "admin", "status", "--exit-code", "--url", "http://127.0.0.1:9089"]
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    # Edit config/bufstream.yaml within this repository to change configuation.
    volumes:
      - "./config/bufstream.yaml:/bufstream.yaml"
    command: [
      "serve",
      "--config", "/bufstream.yaml",
      "--config.kafka.public_address.host", "bufstream",
      "--config.kafka.public_address.port", "9092",
      "--config.kafka.address.host", "0.0.0.0",
      "--config.kafka.address.port", "9092",
    ]
  ###########################################################################
  # Redpanda Console
  ###########################################################################
  console:
    image: redpandadata/console:v2.8.5
    hostname: console
    container_name: console
    environment:
      KAFKA_BROKERS: 'bufstream:9092'
      KAFKA_CLIENTID: 'rpconsole;broker_count=1;host_override=host.docker.internal'
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/health"]
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      bufstream:
        condition: service_healthy
  ###########################################################################
  # minio
  ###########################################################################
  minio:
    image: bitnami/minio:2025.3.12
    hostname: minio
    container_name: minio
    restart: unless-stopped
    profiles: [optional]
    volumes:
      - minio:/bitnami/minio/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS:-apps:download,public:public}
      MINIO_SKIP_CLIENT: "yes"
    ports:
      - '9000:9000'
      - '9001:9001'
    healthcheck:
      test: ['CMD', 'mc', 'ready', 'local']
      interval: 60s
      start_period: 1m
      start_interval: 10s
      timeout: 15s
      retries: 5

  ###########################################################################
  # clickhouse
  ###########################################################################
  clickhouse:
    image: clickhouse/clickhouse-server:25.3-alpine
    hostname: clickhouse
    container_name: clickhouse
    profiles: [optional]
    ports:
      - 8123:8123
      - 9010:9000
      - 9009:9009
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "wget", "--tries=3", "--spider", "-q", "localhost:8123/ping"]
      interval: 5s
      timeout: 3s
    volumes:
      - clickhouse:/var/lib/clickhouse
  ###########################################################################
  # arroyo service
  ###########################################################################
  arroyo:
    image: ghcr.io/arroyosystems/arroyo:latest
    # image: ghcr.io/arroyosystems/arroyo-single:latest
    hostname: arroyo
    container_name: arroyo
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
    ports:
      - 5115:5115
    entrypoint: >
      bash -c "/app/arroyo migrate && /app/arroyo cluster"
    volumes:
      - ./config/arroyo.toml:/app/arroyo.toml:ro
    depends_on:
      postgres:
        condition: service_healthy
      # minio:
      #   condition: service_healthy
      bufstream:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'localhost:5114/status']
      interval: 10s
      start_period: 5s
      timeout: 10s
      retries: 5
###########################################################################
# volumes
###########################################################################
volumes:
  pg_data: {}
  minio: {}
  clickhouse: {}